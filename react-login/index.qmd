---
title: "React Login Workflow"
format: html
---

# üîê React Login with Context and Fetch

This guide shows how to build a basic login system using **React Hooks**, **Context**, and **API integration**.

---

## üß© Login Form Component

```jsx
import React, { useState } from "react";

function LoginForm({ onLogin }) {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    onLogin({ username, password });
  };

  return (
    <form onSubmit={handleSubmit}>
      <input value={username} onChange={e => setUsername(e.target.value)} />
      <input type="password" value={password} onChange={e => setPassword(e.target.value)} />
      <button type="submit">Login</button>
    </form>
  );
}
```

## üîß Auth Context


```jsx
import { createContext, useContext, useState } from "react";

const AuthContext = createContext();

export function AuthProvider({ children }) {
  const [token, setToken] = useState(null);

  const login = async ({ username, password }) => {
    const res = await fetch("/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ username, password }),
    });
    const data = await res.json();
    setToken(data.token);
  };

  return (
    <AuthContext.Provider value={{ token, login }}>
      {children}
    </AuthContext.Provider>
  );
}

export const useAuth = () => useContext(AuthContext);

```

## üè† App Component

```jsx
import React from "react";
import { AuthProvider, useAuth } from "./AuthContext";
import LoginForm from "./LoginForm";

function App() {
  const { login, token } = useAuth();

  return token ? <p>Welcome!</p> : <LoginForm onLogin={login} />;
}

export default function Root() {
  return (
    <AuthProvider>
      <App />
    </AuthProvider>
  );
}

```